CC?= clang
CFLAGS=                                 \
	-Wall                               \
	-Wextra                             \
	-Wpedantic                          \
	-std=c89                            \
	-Wno-overlength-strings             \
	-Wint-conversion                    \
	-Wimplicit-fallthrough              \
	-Wshadow                            \
	-Wcast-qual                         \
	-Wconversion                        \
	-Wdouble-promotion                  \
	-Wfloat-equal                       \
	-Wformat=2                          \
	-Wformat-signedness                 \
	-Winit-self                         \
	-Wstrict-prototypes                 \
	-Wswitch-default                    \
	-Wswitch-enum                       \
	-Wundef                             \
	-Wunused-macros                     \
	-Wwrite-strings                     \
	-Wcast-align                        \
	-Wunreachable-code                  \
	-Wpointer-arith                     \
	-Wnull-dereference                  \
	-g                                  \
	-fstack-protector-all               \
	-fstack-check                       \
	-fsanitize=address,undefined        \
	-fsanitize-address-use-after-scope  \
	-ftrapv								
#   -mshstk #(not available on all platforms)



TRASH= $(shell if which trash 2>/dev/null 1>&2; then echo trash; else echo rm; fi)

all: run

run: example
	./example

example: autogenerated.c
	$(CC) $(CFLAGS) example.c -o example

autogenerated.c: stage_1
	./stage_1

stage_1: example.c core.h Makefile TAGS
	$(CC) $(CFLAGS) -DSTAGE_1 example.c -o stage_1

clean: $(dSYM)
	if [ -e example ];          then $(TRASH) example;       	fi
	if [ -e autogenerated.c ];  then $(TRASH) autogenerated.c;	fi
	if [ -e autogenerated.o ];  then $(TRASH) autogenerated.o;	fi
	if [ -e build ];            then $(TRASH) build;        	fi
	if [ -e stage_1 ];          then $(TRASH) stage_1;        	fi
	if [ -e a.out ];            then $(TRASH) a.out;        	fi
	if [ -e TAGS ];             then $(TRASH) TAGS;          	fi
	if [ -e example.dSYM ];            then $(TRASH) example.dSYM;        	fi
	if [ -e stage_1.dSYM ];             then $(TRASH) stage_1.dSYM;          	fi

TAGS:
	find . $(shell find /usr -type d -name include -maxdepth 4 2>/dev/null) -type f -name '*.[ch]' -exec etags -o TAGS {} +	

.PHONY: clean run all
